import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QVBoxLayout, QWidget, QLineEdit, QPushButton
from PyQt5.QtWebEngineWidgets import QWebEngineView
from PyQt5.QtCore import QUrl


class MapWindow(QMainWindow):
    def __init__(self):
        super().__init__()

        self.setWindowTitle("OpenLayers Map")

        central_widget = QWidget()
        layout = QVBoxLayout()
        central_widget.setLayout(layout)
        self.setCentralWidget(central_widget)

        self.map_view = QWebEngineView()
        layout.addWidget(self.map_view)

        self.search_box = QLineEdit()
        self.search_button = QPushButton("Search")
        self.search_button.clicked.connect(self.search_location)
        layout.addWidget(self.search_box)
        layout.addWidget(self.search_button)

        self.load_map()

    def load_map(self):
        html = """
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>OpenLayers Map</title>
            <link rel="stylesheet" href="https://openlayers.org/en/v4.6.5/css/ol.css" type="text/css">
            <script src="https://openlayers.org/en/v4.6.5/build/ol.js" type="text/javascript"></script>
            <style>
                #map {
                    width: 100%;
                    height: 80%;
                }
            </style>
        </head>
        <body>
            <div id="map" class="map"></div>
            <script type="text/javascript">
                var map = new ol.Map({
                    target: 'map',
                    layers: [
                        new ol.layer.Tile({
                            source: new ol.source.OSM()
                        })
                    ],
                    view: new ol.View({
                        center: ol.proj.fromLonLat([0, 0]),
                        zoom: 2
                    })
                });

                map.on('click', function(evt) {
                    var coordinate = evt.coordinate;
                    var lonLat = ol.proj.toLonLat(coordinate);
                    var lon = lonLat[0];
                    var lat = lonLat[1];

                    var popupContent = '<p>Coordinates: ' + lon.toFixed(5) + ', ' + lat.toFixed(5) + '</p>';

                    var popup = new ol.Overlay({
                        element: document.getElementById('popup'),
                        positioning: 'bottom-center',
                        stopEvent: false,
                        offset: [0, -50]
                    });
                    map.addOverlay(popup);

                    popup.setPosition(coordinate);
                    document.getElementById('popup-content').innerHTML = popupContent;
                });
            </script>
            <div id="popup" class="ol-popup">
                <div id="popup-content"></div>
            </div>
        </body>
        </html>
        """

        self.map_view.setHtml(html)

    def search_location(self):
        query = self.search_box.text()
        if query:
            self.map_view.page().runJavaScript("searchLocation('" + query + "');")


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = MapWindow()
    window.show()
    sys.exit(app.exec_())
